// SolarSystem.jsx
import React, { useRef } from "react";
import { Canvas, useFrame } from "@react-three/fiber";
import { OrbitControls, Stars, useTexture } from "@react-three/drei";

function Sun() {
  const sunTexture = useTexture("/textures/sun.jpg");
  return (
    <mesh castShadow receiveShadow>
      <sphereGeometry args={[4, 64, 64]} />
      <meshStandardMaterial
        map={sunTexture}
        emissive="#ffff33"
        emissiveIntensity={1.5}
        emissiveMap={sunTexture}
        roughness={0.4}
        metalness={0}
      />
    </mesh>
  );
}

function Planet({ textureUrl, size, distance, orbitSpeed, rotationSpeed }) {
  const planetRef = useRef();
  const meshRef = useRef();
  const texture = useTexture(textureUrl);

  useFrame(({ clock }) => {
    const elapsed = clock.getElapsedTime();
    if (planetRef.current) {
      planetRef.current.position.x = Math.cos(elapsed * orbitSpeed) * distance;
      planetRef.current.position.z = Math.sin(elapsed * orbitSpeed) * distance;
    }
    if (meshRef.current) {
      meshRef.current.rotation.y += rotationSpeed;
    }
  });

  return (
    <group ref={planetRef} castShadow receiveShadow>
      <mesh ref={meshRef} castShadow receiveShadow>
        <sphereGeometry args={[size, 64, 64]} />
        <meshStandardMaterial map={texture} roughness={1} metalness={0} />
      </mesh>
    </group>
  );
}

export default function SolarSystem({ scale = 1 }) {
  const planets = [
    {
      name: "Mercury",
      textureUrl: "/textures/mercury.jpg",
      size: 0.4,
      distance: 6,
      orbitSpeed: 4.15,
      rotationSpeed: 0.004,
    },
    {
      name: "Venus",
      textureUrl: "/textures/venus.jpg",
      size: 0.95,
      distance: 8,
      orbitSpeed: 1.62,
      rotationSpeed: 0.002,
    },
    {
      name: "Earth",
      textureUrl: "/textures/earth.jpg",
      size: 1,
      distance: 10,
      orbitSpeed: 1,
      rotationSpeed: 0.02,
    },
    {
      name: "Mars",
      textureUrl: "/textures/mars.jpg",
      size: 0.53,
      distance: 12,
      orbitSpeed: 0.53,
      rotationSpeed: 0.018,
    },
    {
      name: "Jupiter",
      textureUrl: "/textures/jupiter.jpg",
      size: 2.5,
      distance: 16,
      orbitSpeed: 0.08,
      rotationSpeed: 0.04,
    },
    {
      name: "Saturn",
      textureUrl: "/textures/saturn.jpg",
      size: 2.1,
      distance: 20,
      orbitSpeed: 0.03,
      rotationSpeed: 0.038,
    },
    {
      name: "Uranus",
      textureUrl: "/textures/uranus.jpg",
      size: 1.7,
      distance: 24,
      orbitSpeed: 0.012,
      rotationSpeed: 0.03,
    },
    {
      name: "Neptune",
      textureUrl: "/textures/neptune.jpg",
      size: 1.6,
      distance: 28,
      orbitSpeed: 0.006,
      rotationSpeed: 0.032,
    },
  ];

  return (
    <div
      style={{
        width: "100%",
        height: "700px",
        transform: `scale(${scale})`,
        transformOrigin: "top center",
        transition: "transform 0.3s ease-out",
      }}
    >
      <Canvas shadows camera={{ position: [0, 30, 60], fov: 45 }}>
        <ambientLight intensity={0.2} />
        <pointLight position={[0, 0, 0]} intensity={3} castShadow />
        <Stars
          radius={400}
          depth={80}
          count={8000}
          factor={10}
          saturation={0}
          fade
        />
        <Sun />
        {planets.map(
          ({ name, textureUrl, size, distance, orbitSpeed, rotationSpeed }) => (
            <Planet
              key={name}
              textureUrl={textureUrl}
              size={size}
              distance={distance}
              orbitSpeed={orbitSpeed}
              rotationSpeed={rotationSpeed}
            />
          )
        )}
        <OrbitControls enableZoom={true} />
      </Canvas>
    </div>
  );
}
